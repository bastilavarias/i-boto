# Base image
FROM node:23.11.0-bookworm-slim AS base

# Puppeteer dependencies
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    fontconfig \
    python3 \
    build-essential \
    chromium \
    fonts-liberation \
    libappindicator3-1 \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libc6 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libexpat1 \
    libfontconfig1 \
    libgbm1 \
    libgcc1 \
    libglib2.0-0 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    lsb-release \
    xdg-utils \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app/iboto/engine

# Build-time argument to switch between dev and prod
ARG NODE_ENV=production

# Set the environment dynamically
ENV NODE_ENV=${NODE_ENV}

# Base installer stage
FROM base AS installer
RUN corepack enable
COPY . .

# Install dependencies (for production)
FROM installer AS deps
RUN npm install --production

# Build the application
FROM installer AS build
COPY --from=deps /usr/src/app/iboto/engine/node_modules /usr/src/app/iboto/engine/node_modules
RUN npm run build || node ace build --ignore-ts-errors

# Final production stage
FROM base AS final

ENV FONTCONFIG_PATH=/etc/fonts
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium

WORKDIR /usr/src/app/iboto/engine

# Copy production dependencies and build artifacts
COPY --from=deps /usr/src/app/iboto/engine/node_modules ./node_modules
COPY --from=build /usr/src/app/iboto/engine/build ./build
COPY . .

EXPOSE 3333
CMD ["node", "./build/server.js"]
